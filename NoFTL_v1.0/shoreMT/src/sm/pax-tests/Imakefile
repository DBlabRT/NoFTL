/*<std-header style='imakefile' orig-src='shore'>

 $Id: Imakefile,v 3.5 2000/10/26 23:26:44 natassa Exp $

SHORE -- Scalable Heterogeneous Object REpository

Copyright (c) 1994-99 Computer Sciences Department, University of
                      Wisconsin -- Madison
All Rights Reserved.

Permission to use, copy, modify and distribute this software and its
documentation is hereby granted, provided that both the copyright
notice and this permission notice appear in all copies of the
software, derivative works or modified versions, and any portions
thereof, and that both notices appear in supporting documentation.

THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
"AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

This software was developed with support by the Advanced Research
Project Agency, ARPA order number 018 (formerly 8230), monitored by
the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
Further funding for this work was provided by DARPA through
Rome Research Laboratory Contract No. F30602-97-2-0247.

  -- do not edit anything above this line --   </std-header>*/

all_target_files(tests)

INCLUDE_DIRS += \
	$(SM_INCL)		\
	$(STHREAD_INCL)		\
	$(FC_INCL)		\
	$(COMMON_INCL)

LIBRARY = $(SM_LIB) $(COMMON_LIB) $(STHREAD_LIB) $(FC_LIB)

#ifdef IS_SPARC_SOLARIS2
/* Uncomment this to activate LIB_PIC */
INCLUDE_DIRS += $(RUN_PIC_INCL)
LIBRARY += $(RUN_PIC_LIB)
CPPFLAGS += -DLIB_PIC
#endif

#ifdef IS_ALPHA_OSF1
/* Uncomment this to activate PCL */
/*
CPPFLAGS += -DPCL
INCLUDE_DIRS += $(PCL_INCL)
LIBRARY += $(PCL_LIB) -lmach
*/
#endif

#ifdef IS_I386_LINUX
INCLUDE_DIRS += $(PAPI_INCL)
LIBRARY += $(PAPI_LIB)
CPPFLAGS += -DPAPI
#endif


remote_target($(SM_LIB))

init_file_group(sm_exec)
sm_exec.cpp += query_util.cpp sm_exec.cpp sm_query.cpp sm_hash.cpp ahhjoin.cpp sm_tpch.cpp options.cpp sm_measure.cpp
sm_exec.h += query_util.h sm_exec.h sm_query.h sm_hash.h ahhjoin.h sm_tpch.h
sm_exec.other += exampleconfig Makefile.gcc all
sm_exec.libs += $(LIBRARY)
sm_exec.exec_name = sm_exec

build_test_exec(sm_exec)

install_copy(bin, $(sm_exec.full_exec_name))

init_file_group(file_scan)
file_scan.cpp += file_scan.cpp options.cpp
file_scan.other += exampleconfig Makefile.gcc all
file_scan.libs += $(LIBRARY)
file_scan.exec_name = file_scan

build_test_exec(file_scan)

install_copy(bin, $(file_scan.full_exec_name))
